<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.14.6" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="fanout" val="32"/>
    </tool>
    <tool name="Pin">
      <a name="facing" val="south"/>
    </tool>
    <tool name="Clock">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="3"/>
    </tool>
    <tool name="OR Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="XOR Gate">
      <a name="size" val="30"/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3">
    <tool name="Subtractor">
      <a name="width" val="1"/>
    </tool>
  </lib>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
&#13;
entity TCL_Generic is&#13;
  port(&#13;
    --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
&#13;
	  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
  );&#13;
end TCL_Generic;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(130,200)" to="(130,270)"/>
    <wire from="(190,250)" to="(190,320)"/>
    <wire from="(80,250)" to="(140,250)"/>
    <wire from="(140,110)" to="(200,110)"/>
    <wire from="(250,370)" to="(310,370)"/>
    <wire from="(180,220)" to="(180,230)"/>
    <wire from="(180,250)" to="(180,260)"/>
    <wire from="(190,320)" to="(310,320)"/>
    <wire from="(280,270)" to="(280,280)"/>
    <wire from="(280,300)" to="(280,310)"/>
    <wire from="(70,50)" to="(120,50)"/>
    <wire from="(70,70)" to="(120,70)"/>
    <wire from="(350,320)" to="(350,330)"/>
    <wire from="(130,200)" to="(240,200)"/>
    <wire from="(240,180)" to="(240,200)"/>
    <wire from="(240,200)" to="(240,220)"/>
    <wire from="(180,230)" to="(220,230)"/>
    <wire from="(160,60)" to="(200,60)"/>
    <wire from="(280,240)" to="(280,270)"/>
    <wire from="(350,350)" to="(350,380)"/>
    <wire from="(140,80)" to="(140,110)"/>
    <wire from="(140,10)" to="(140,40)"/>
    <wire from="(350,330)" to="(390,330)"/>
    <wire from="(350,350)" to="(390,350)"/>
    <wire from="(210,380)" to="(310,380)"/>
    <wire from="(190,250)" to="(220,250)"/>
    <wire from="(250,270)" to="(280,270)"/>
    <wire from="(90,330)" to="(310,330)"/>
    <wire from="(280,310)" to="(310,310)"/>
    <wire from="(90,220)" to="(180,220)"/>
    <wire from="(250,270)" to="(250,370)"/>
    <wire from="(260,240)" to="(280,240)"/>
    <wire from="(280,240)" to="(300,240)"/>
    <wire from="(420,340)" to="(440,340)"/>
    <wire from="(90,220)" to="(90,330)"/>
    <wire from="(340,320)" to="(350,320)"/>
    <wire from="(340,380)" to="(350,380)"/>
    <wire from="(130,270)" to="(140,270)"/>
    <wire from="(180,250)" to="(190,250)"/>
    <wire from="(130,10)" to="(140,10)"/>
    <wire from="(80,220)" to="(90,220)"/>
    <wire from="(110,390)" to="(310,390)"/>
    <wire from="(90,330)" to="(90,390)"/>
    <wire from="(190,320)" to="(190,380)"/>
    <comp lib="0" loc="(80,220)" name="Pin"/>
    <comp lib="0" loc="(80,250)" name="Pin"/>
    <comp lib="1" loc="(180,260)" name="XOR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="3" loc="(260,240)" name="Adder">
      <a name="width" val="1"/>
    </comp>
    <comp lib="0" loc="(240,180)" name="Pin">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="0" loc="(300,240)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="3" loc="(160,60)" name="Subtractor">
      <a name="width" val="1"/>
    </comp>
    <comp lib="0" loc="(200,60)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="0" loc="(200,110)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="0" loc="(70,50)" name="Pin"/>
    <comp lib="0" loc="(70,70)" name="Pin"/>
    <comp lib="0" loc="(130,10)" name="Pin"/>
    <comp lib="1" loc="(340,380)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(340,320)" name="AND Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(280,300)" name="NOT Gate">
      <a name="facing" val="south"/>
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(110,390)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(210,380)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(420,340)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="0" loc="(440,340)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="8" loc="(318,115)" name="Text">
      <a name="text" val="Indicates whether result is negative"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(386,174)" name="Text">
      <a name="text" val="Performs addition when turned off else subtraction"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(36,54)" name="Text">
      <a name="text" val="A"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(36,77)" name="Text">
      <a name="text" val="B"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(44,224)" name="Text">
      <a name="text" val="A"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(44,256)" name="Text">
      <a name="text" val="B"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(339,76)" name="Text">
      <a name="text" val="= A + (~B) +1"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(336,58)" name="Text">
      <a name="text" val="A - B"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(348,37)" name="Text">
      <a name="text" val="Subtractor"/>
      <a name="font" val="SansSerif bold 32"/>
    </comp>
    <comp lib="8" loc="(343,244)" name="Text">
      <a name="text" val="Result"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(241,64)" name="Text">
      <a name="text" val="Result"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(98,127)" name="Text">
      <a name="text" val="Logisim's built-in subtractor"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(447,313)" name="Text">
      <a name="text" val="Indicates whether result is negative"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(211,421)" name="Text">
      <a name="text" val="My implementation of the subtractor using full-adder, 'and', 'or', 'xor', 'not' gates"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(604,84)" name="Text">
      <a name="text" val="- A and B are input values, which can be 0 or 1"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="8" loc="(557,58)" name="Text">
      <a name="text" val="- Performs binary subtraction"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
  </circuit>
</project>
